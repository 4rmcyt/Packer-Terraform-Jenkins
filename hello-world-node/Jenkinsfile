node (label: 'build && linux && adminpanel') {
  stage('Clean Workspace'){
        cleanWs()
  }
  
  stage("Main build") {
    docker.image('node:10  ').pull()
    // To add support for ng serve from within container - add `.withRun('-p 4200:4200')` Also Image will be 
    // needed to be updated to run `ng serve`
    docker.image('node:10').inside {
      stage('Checkout SCM') {
        checkout([$class: 'GitSCM', branches: [[name: 'hello-node']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '5a70cb58-0311-4553-b63e-7b9bb8a81f0d', url: 'https://github.com/ismail0352/Packer-Terraform-Jenkins.git']]])
      }
      stage('Install') {
        sh label: 
        'Running npm install', 
         script: '''
         node --version
         npm install
         ./node_modules/.bin/ng --version
         '''
      }
      // stage('Test') {
      //   sh label: 
      //   'Running npm run test', 
      //    script: '''
      //    node --version
      //    ./node_modules/.bin/ng --version
      //    npm run test
      //    '''
      // }
      // stage('e2e') {
      //   sh label: 
      //   'Running npm run e2e', 
      //    script: '''
      //    node --version
      //    ./node_modules/.bin/ng --version
      //    npm run e2e
      //    '''
      // }
      stage('build') {
        sh label: 
        'Running npm run build', 
         script: '''
         node --version
         ./node_modules/.bin/ng --version
         npm run build
         '''
      }
    }
  }
  
  // stage('DownStream Job') {
  //       build job: 'AdminPanelDeployPiepeline', quietPeriod: 0, parameters: [[$class: 'StringParameterValue', name: 'workspace', value: env.WORKSPACE]]
  // }
}